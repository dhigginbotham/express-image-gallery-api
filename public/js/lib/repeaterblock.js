// Generated by CoffeeScript 1.6.3
(function() {
  var $, nestableitem, repeaterblock, repeaters;

  repeaters = {};

  window.populatenestable = function(baseid) {
    return repeaters[baseid].update();
  };

  repeaterblock = (function() {
    repeaterblock.prototype.items = [];

    function repeaterblock(inputid, baseinput, iconcontainer, basecontainer) {
      this.inputid = inputid;
      this.baseinput = baseinput;
      this.iconcontainer = iconcontainer;
      this.basecontainer = basecontainer;
      this.setupnestable();
      this.update();
      document.getElementById("feauxinput_" + this.inputid).style.float = 'left';
    }

    repeaterblock.prototype.update = function() {
      var item, newItems, _i, _len, _results;
      newItems = [];
      $(this.iconcontainer).children('span.badge').each(function() {
        if (!($(this).hasClass('already_nested'))) {
          $(this).addClass('already_nested');
          return newItems.push(this);
        }
      });
      _results = [];
      for (_i = 0, _len = newItems.length; _i < _len; _i++) {
        item = newItems[_i];
        _results.push(this.add(item));
      }
      return _results;
    };

    repeaterblock.prototype.add = function(item) {
      var li;
      li = create(nestableitem($(item).text()));
      return this.nest.appendChild(li);
    };

    repeaterblock.prototype.setupnestable = function() {
      var div;
      div = create({
        type: 'div',
        attributes: {
          'class': 'dd'
        },
        contains: [
          {
            type: 'ol',
            attributes: {
              'class': 'dd-list'
            },
            contains: []
          }
        ]
      });
      this.nest = div.getElementsByTagName('ol')[0];
      this.basecontainer.appendChild(div);
      return $(div).nestable();
    };

    return repeaterblock;

  })();

  $ = jQuery;

  $(function() {
    var init;
    return (init = function() {
      return $('.repeaterblock').each(function() {
        var div, iconcontainer, innerdivs, innerinputs, input, inputid, theinput, _i, _j, _len, _len1;
        inputid = false;
        innerdivs = this.getElementsByTagName('div');
        for (_i = 0, _len = innerdivs.length; _i < _len; _i++) {
          div = innerdivs[_i];
          if (div.getAttribute('id').indexOf('icon_container' > -1)) {
            iconcontainer = div;
            div.style.display = 'none';
          }
        }
        if ((function() {
          var _j, _len1, _results;
          _results = [];
          for (_j = 0, _len1 = innerdivs.length; _j < _len1; _j++) {
            div = innerdivs[_j];
            _results.push(div.getAttribute('id').indexOf('icon_container' > -1));
          }
          return _results;
        })()) {
          div.style.display = 'none';
        }
        innerinputs = this.getElementsByTagName('input');
        for (_j = 0, _len1 = innerinputs.length; _j < _len1; _j++) {
          input = innerinputs[_j];
          if (input.getAttribute('class') === 'taggable') {
            inputid = input.getAttribute('id');
            theinput = input;
          }
        }
        if (inputid) {
          return repeaters[inputid] = new repeaterblock(inputid, theinput, iconcontainer, this);
        } else {
          return console.log("Error setting up Repeater Block, missing '.taggable' input.");
        }
      });
    })();
  });

  nestableitem = function(text) {
    return {
      type: 'li',
      attributes: {
        'class': 'dd-item'
      },
      contains: [
        {
          type: 'div',
          attributes: {
            'class': 'dd-handle'
          },
          contains: [text]
        }, {
          type: 'select',
          attributes: {},
          contains: [
            {
              type: 'option',
              attributes: {},
              contains: ["HELLO WORLD 1"]
            }, {
              type: 'option',
              attributes: {},
              contains: ["HELLO WORLD 2"]
            }, {
              type: 'option',
              attributes: {},
              contains: ["HELLO WORLD 3"]
            }
          ]
        }, {
          type: 'i',
          attributes: {
            'class': 'icon-remove-circle'
          },
          contains: []
        }
      ]
    };
  };

}).call(this);
